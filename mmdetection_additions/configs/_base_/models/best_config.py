"MMDetection config for the optimal WSBD model found during experimentation."

NUM_EPOCHS = 200
albu_transforms = [
    dict(p=0.5, type="HorizontalFlip"),
    dict(p=0.5, type="VerticalFlip"),
    dict(p=0.5, type="PixelDropout"),
    dict(height=500, p=0.5, type="RandomSizedBBoxSafeCrop", width=500),
]
auto_scale_lr = dict(base_batch_size=16, enable=False)
backend_args = None
classes = [
    "cup_coral",
    "stylasterids",
    "ophiosabine",
    "astrochlamys",
    "demosponges",
    "asteroidea",
    "glass_sponge",
    "anthomastus",
    "alcyonium",
    "ophiuroid_5_arms",
    "actiniarian",
    "gorgonian",
    "pycnogonid",
    "cucumber",
    "pencil_urchin",
    "worm_tubes",
    "crinoid",
    "bryozoan",
    "benthic_fish",
    "crustaceans",
    "ascidian_pyura_bouvetensis",
    "echinoid",
    "hydroid_solitary",
    "ascidian_cnemidocarpa_verrucosa",
    "ascidian_distaplia",
]
data = dict(
    test=dict(
        classes=[
            "cup_coral",
            "stylasterids",
            "ophiosabine",
            "astrochlamys",
            "demosponges",
            "asteroidea",
            "glass_sponge",
            "anthomastus",
            "alcyonium",
            "ophiuroid_5_arms",
            "actiniarian",
            "gorgonian",
            "pycnogonid",
            "cucumber",
            "pencil_urchin",
            "worm_tubes",
            "crinoid",
            "bryozoan",
            "benthic_fish",
            "crustaceans",
            "ascidian_pyura_bouvetensis",
            "echinoid",
            "hydroid_solitary",
            "ascidian_cnemidocarpa_verrucosa",
            "ascidian_distaplia",
        ]
    ),
    train=dict(
        classes=[
            "cup_coral",
            "stylasterids",
            "ophiosabine",
            "astrochlamys",
            "demosponges",
            "asteroidea",
            "glass_sponge",
            "anthomastus",
            "alcyonium",
            "ophiuroid_5_arms",
            "actiniarian",
            "gorgonian",
            "pycnogonid",
            "cucumber",
            "pencil_urchin",
            "worm_tubes",
            "crinoid",
            "bryozoan",
            "benthic_fish",
            "crustaceans",
            "ascidian_pyura_bouvetensis",
            "echinoid",
            "hydroid_solitary",
            "ascidian_cnemidocarpa_verrucosa",
            "ascidian_distaplia",
        ]
    ),
    val=dict(
        classes=[
            "cup_coral",
            "stylasterids",
            "ophiosabine",
            "astrochlamys",
            "demosponges",
            "asteroidea",
            "glass_sponge",
            "anthomastus",
            "alcyonium",
            "ophiuroid_5_arms",
            "actiniarian",
            "gorgonian",
            "pycnogonid",
            "cucumber",
            "pencil_urchin",
            "worm_tubes",
            "crinoid",
            "bryozoan",
            "benthic_fish",
            "crustaceans",
            "ascidian_pyura_bouvetensis",
            "echinoid",
            "hydroid_solitary",
            "ascidian_cnemidocarpa_verrucosa",
            "ascidian_distaplia",
        ]
    ),
)
dataset_type = "CocoDataset"
default_hooks = dict(
    checkpoint=dict(rule="greater", save_best="auto", type="CheckpointHook"),
    logger=dict(interval=50, type="LoggerHook"),
    param_scheduler=dict(type="ParamSchedulerHook"),
    sampler_seed=dict(type="DistSamplerSeedHook"),
    timer=dict(type="IterTimerHook"),
    visualization=dict(type="DetVisualizationHook"),
)
default_scope = "mmdet"
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend="nccl"),
    mp_cfg=dict(mp_start_method="fork", opencv_num_threads=0),
)
h = 500
launcher = "none"
log_level = "INFO"
log_processor = dict(by_epoch=True, type="LogProcessor", window_size=50)
metainfo = dict(
    classes=[
        "cup_coral",
        "stylasterids",
        "ophiosabine",
        "astrochlamys",
        "demosponges",
        "asteroidea",
        "glass_sponge",
        "anthomastus",
        "alcyonium",
        "ophiuroid_5_arms",
        "actiniarian",
        "gorgonian",
        "pycnogonid",
        "cucumber",
        "pencil_urchin",
        "worm_tubes",
        "crinoid",
        "bryozoan",
        "benthic_fish",
        "crustaceans",
        "ascidian_pyura_bouvetensis",
        "echinoid",
        "hydroid_solitary",
        "ascidian_cnemidocarpa_verrucosa",
        "ascidian_distaplia",
    ],
    palette=[
        (
            255,
            0,
            0,
        ),
        (
            255,
            62,
            0,
        ),
        (
            255,
            125,
            0,
        ),
        (
            255,
            188,
            0,
        ),
        (
            251,
            247,
            0,
        ),
        (
            196,
            255,
            0,
        ),
        (
            133,
            255,
            0,
        ),
        (
            70,
            255,
            0,
        ),
        (
            7,
            255,
            0,
        ),
        (
            0,
            255,
            54,
        ),
        (
            0,
            255,
            117,
        ),
        (
            0,
            255,
            180,
        ),
        (
            0,
            255,
            243,
        ),
        (
            0,
            204,
            255,
        ),
        (
            0,
            141,
            255,
        ),
        (
            0,
            78,
            255,
        ),
        (
            0,
            15,
            255,
        ),
        (
            46,
            0,
            255,
        ),
        (
            109,
            0,
            255,
        ),
        (
            172,
            0,
            255,
        ),
        (
            235,
            0,
            255,
        ),
        (
            255,
            0,
            212,
        ),
        (
            255,
            0,
            149,
        ),
        (
            255,
            0,
            86,
        ),
        (
            255,
            0,
            23,
        ),
    ],
)
model = dict(
    as_two_stage=False,
    backbone=dict(
        depth=50,
        frozen_stages=1,
        init_cfg=dict(checkpoint="torchvision://resnet50", type="Pretrained"),
        norm_cfg=dict(requires_grad=False, type="BN"),
        norm_eval=True,
        num_stages=4,
        out_indices=(
            1,
            2,
            3,
        ),
        style="pytorch",
        type="ResNet",
    ),
    bbox_head=dict(
        loss_bbox=dict(loss_weight=5.0, type="L1Loss"),
        loss_cls=dict(
            alpha=0.25, gamma=2.0, loss_weight=2.0, type="FocalLoss", use_sigmoid=True
        ),
        loss_iou=dict(loss_weight=2.0, type="GIoULoss"),
        num_classes=25,
        sync_cls_avg_factor=True,
        type="DeformableDETRHead",
    ),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_size_divisor=1,
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type="DetDataPreprocessor",
    ),
    decoder=dict(
        layer_cfg=dict(
            cross_attn_cfg=dict(batch_first=True, embed_dims=256),
            ffn_cfg=dict(embed_dims=256, feedforward_channels=1024, ffn_drop=0.1),
            self_attn_cfg=dict(
                batch_first=True, dropout=0.1, embed_dims=256, num_heads=8
            ),
        ),
        num_layers=6,
        post_norm_cfg=None,
        return_intermediate=True,
    ),
    encoder=dict(
        layer_cfg=dict(
            ffn_cfg=dict(embed_dims=256, feedforward_channels=1024, ffn_drop=0.1),
            self_attn_cfg=dict(batch_first=True, embed_dims=256),
        ),
        num_layers=6,
    ),
    neck=dict(
        act_cfg=None,
        in_channels=[
            512,
            1024,
            2048,
        ],
        kernel_size=1,
        norm_cfg=dict(num_groups=32, type="GN"),
        num_outs=4,
        out_channels=256,
        type="ChannelMapper",
    ),
    num_feature_levels=4,
    num_queries=300,
    positional_encoding=dict(normalize=True, num_feats=128, offset=-0.5),
    test_cfg=dict(max_per_img=100),
    train_cfg=dict(
        assigner=dict(
            match_costs=[
                dict(type="FocalLossCost", weight=2.0),
                dict(box_format="xywh", type="BBoxL1Cost", weight=5.0),
                dict(iou_mode="giou", type="IoUCost", weight=2.0),
            ],
            type="HungarianAssigner",
        )
    ),
    type="DeformableDETR",
    with_box_refine=False,
)
optim_wrapper = dict(
    clip_grad=dict(max_norm=0.1, norm_type=2),
    optimizer=dict(lr=0.0002, type="AdamW", weight_decay=0.0001),
    paramwise_cfg=dict(
        custom_keys=dict(
            backbone=dict(lr_mult=0.1),
            reference_points=dict(lr_mult=0.1),
            sampling_offsets=dict(lr_mult=0.1),
        )
    ),
    type="OptimWrapper",
)
param_scheduler = [
    dict(begin=0, by_epoch=False, end=0.5, start_factor=0.001, type="LinearLR"),
    dict(
        begin=0,
        by_epoch=True,
        end=1,
        gamma=0.1,
        milestones=[
            100,
            150,
        ],
        type="MultiStepLR",
    ),
]
randomness = dict(seed=42)
resume = False
test_cfg = dict(type="TestLoop")
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file="/data/patches/500_500_overlap_05_minviz_025/annotations/dataset_test_patches.json",
        data_prefix=dict(img="/data/patches/500_500_overlap_05_minviz_025/images/"),
        data_root="/data/patches/500_500_overlap_05_minviz_025/",
        metainfo=dict(
            classes=[
                "cup_coral",
                "stylasterids",
                "ophiosabine",
                "astrochlamys",
                "demosponges",
                "asteroidea",
                "glass_sponge",
                "anthomastus",
                "alcyonium",
                "ophiuroid_5_arms",
                "actiniarian",
                "gorgonian",
                "pycnogonid",
                "cucumber",
                "pencil_urchin",
                "worm_tubes",
                "crinoid",
                "bryozoan",
                "benthic_fish",
                "crustaceans",
                "ascidian_pyura_bouvetensis",
                "echinoid",
                "hydroid_solitary",
                "ascidian_cnemidocarpa_verrucosa",
                "ascidian_distaplia",
            ],
            palette=[
                (
                    255,
                    0,
                    0,
                ),
                (
                    255,
                    62,
                    0,
                ),
                (
                    255,
                    125,
                    0,
                ),
                (
                    255,
                    188,
                    0,
                ),
                (
                    251,
                    247,
                    0,
                ),
                (
                    196,
                    255,
                    0,
                ),
                (
                    133,
                    255,
                    0,
                ),
                (
                    70,
                    255,
                    0,
                ),
                (
                    7,
                    255,
                    0,
                ),
                (
                    0,
                    255,
                    54,
                ),
                (
                    0,
                    255,
                    117,
                ),
                (
                    0,
                    255,
                    180,
                ),
                (
                    0,
                    255,
                    243,
                ),
                (
                    0,
                    204,
                    255,
                ),
                (
                    0,
                    141,
                    255,
                ),
                (
                    0,
                    78,
                    255,
                ),
                (
                    0,
                    15,
                    255,
                ),
                (
                    46,
                    0,
                    255,
                ),
                (
                    109,
                    0,
                    255,
                ),
                (
                    172,
                    0,
                    255,
                ),
                (
                    235,
                    0,
                    255,
                ),
                (
                    255,
                    0,
                    212,
                ),
                (
                    255,
                    0,
                    149,
                ),
                (
                    255,
                    0,
                    86,
                ),
                (
                    255,
                    0,
                    23,
                ),
            ],
        ),
        pipeline=[
            dict(type="LoadImageFromFile"),
            dict(type="LoadAnnotations", with_bbox=True),
            dict(
                keep_ratio=True,
                scale=(
                    500,
                    500,
                ),
                type="Resize",
            ),
            dict(
                meta_keys=(
                    "img_id",
                    "img_path",
                    "ori_shape",
                    "img_shape",
                    "scale_factor",
                ),
                type="PackDetInputs",
            ),
        ],
        test_mode=True,
        type="CocoDataset",
    ),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type="DefaultSampler"),
)
test_evaluator = dict(
    ann_file="/data/patches/500_500_overlap_05_minviz_025/annotations/dataset_test_patches.json",
    format_only=False,
    metric="bbox",
    outfile_prefix="work_dirs/500_500_overlap_05_minviz_025_spatial_deformable-detr_pretrained/test/500_500_overlap_05_minviz_025_spatial_deformable-detr_pretrained_patches",
    type="CocoMetric",
)
test_pipeline = [
    dict(type="LoadImageFromFile"),
    dict(type="LoadAnnotations", with_bbox=True),
    dict(
        keep_ratio=True,
        scale=(
            500,
            500,
        ),
        type="Resize",
    ),
    dict(
        meta_keys=(
            "img_id",
            "img_path",
            "ori_shape",
            "img_shape",
            "scale_factor",
        ),
        type="PackDetInputs",
    ),
]
train_cfg = dict(max_epochs=200, type="EpochBasedTrainLoop", val_interval=1)
train_dataloader = dict(
    batch_sampler=dict(type="AspectRatioBatchSampler"),
    batch_size=12,
    dataset=dict(
        ann_file="/data/patches/500_500_overlap_05_minviz_025/annotations/dataset_train_patches.json",
        backend_args=None,
        data_prefix=dict(img="/data/patches/500_500_overlap_05_minviz_025/images/"),
        data_root="/data/patches/500_500_overlap_05_minviz_025/",
        filter_cfg=dict(filter_empty_gt=True, min_size=32),
        metainfo=dict(
            classes=[
                "cup_coral",
                "stylasterids",
                "ophiosabine",
                "astrochlamys",
                "demosponges",
                "asteroidea",
                "glass_sponge",
                "anthomastus",
                "alcyonium",
                "ophiuroid_5_arms",
                "actiniarian",
                "gorgonian",
                "pycnogonid",
                "cucumber",
                "pencil_urchin",
                "worm_tubes",
                "crinoid",
                "bryozoan",
                "benthic_fish",
                "crustaceans",
                "ascidian_pyura_bouvetensis",
                "echinoid",
                "hydroid_solitary",
                "ascidian_cnemidocarpa_verrucosa",
                "ascidian_distaplia",
            ],
            palette=[
                (
                    255,
                    0,
                    0,
                ),
                (
                    255,
                    62,
                    0,
                ),
                (
                    255,
                    125,
                    0,
                ),
                (
                    255,
                    188,
                    0,
                ),
                (
                    251,
                    247,
                    0,
                ),
                (
                    196,
                    255,
                    0,
                ),
                (
                    133,
                    255,
                    0,
                ),
                (
                    70,
                    255,
                    0,
                ),
                (
                    7,
                    255,
                    0,
                ),
                (
                    0,
                    255,
                    54,
                ),
                (
                    0,
                    255,
                    117,
                ),
                (
                    0,
                    255,
                    180,
                ),
                (
                    0,
                    255,
                    243,
                ),
                (
                    0,
                    204,
                    255,
                ),
                (
                    0,
                    141,
                    255,
                ),
                (
                    0,
                    78,
                    255,
                ),
                (
                    0,
                    15,
                    255,
                ),
                (
                    46,
                    0,
                    255,
                ),
                (
                    109,
                    0,
                    255,
                ),
                (
                    172,
                    0,
                    255,
                ),
                (
                    235,
                    0,
                    255,
                ),
                (
                    255,
                    0,
                    212,
                ),
                (
                    255,
                    0,
                    149,
                ),
                (
                    255,
                    0,
                    86,
                ),
                (
                    255,
                    0,
                    23,
                ),
            ],
        ),
        pipeline=[
            dict(type="LoadImageFromFile"),
            dict(type="LoadAnnotations", with_bbox=True),
            dict(
                keep_ratio=True,
                scale=(
                    500,
                    500,
                ),
                type="Resize",
            ),
            dict(
                bbox_params=dict(
                    filter_lost_elements=True,
                    format="pascal_voc",
                    label_fields=[
                        "gt_bboxes_labels",
                    ],
                    min_area=0.1,
                    min_visibility=0.1,
                    type="BboxParams",
                ),
                keymap=dict(gt_bboxes="bboxes", img="image"),
                skip_img_without_anno=True,
                transforms=[
                    dict(p=0.5, type="HorizontalFlip"),
                    dict(p=0.5, type="VerticalFlip"),
                    dict(p=0.5, type="PixelDropout"),
                    dict(height=500, p=0.5, type="RandomSizedBBoxSafeCrop", width=500),
                ],
                type="Albu",
            ),
            dict(
                meta_keys=(
                    "img_id",
                    "img_path",
                    "ori_shape",
                    "img_shape",
                    "scale_factor",
                ),
                type="PackDetInputs",
            ),
        ],
        type="CocoDataset",
    ),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type="DefaultSampler"),
)
train_pipeline = [
    dict(type="LoadImageFromFile"),
    dict(type="LoadAnnotations", with_bbox=True),
    dict(
        keep_ratio=True,
        scale=(
            500,
            500,
        ),
        type="Resize",
    ),
    dict(
        bbox_params=dict(
            filter_lost_elements=True,
            format="pascal_voc",
            label_fields=[
                "gt_bboxes_labels",
            ],
            min_area=0.1,
            min_visibility=0.1,
            type="BboxParams",
        ),
        keymap=dict(gt_bboxes="bboxes", img="image"),
        skip_img_without_anno=True,
        transforms=[
            dict(p=0.5, type="HorizontalFlip"),
            dict(p=0.5, type="VerticalFlip"),
            dict(p=0.5, type="PixelDropout"),
            dict(height=500, p=0.5, type="RandomSizedBBoxSafeCrop", width=500),
        ],
        type="Albu",
    ),
    dict(
        meta_keys=(
            "img_id",
            "img_path",
            "ori_shape",
            "img_shape",
            "scale_factor",
        ),
        type="PackDetInputs",
    ),
]
val_cfg = dict(type="ValLoop")
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file="/data/patches/500_500_overlap_05_minviz_025/annotations/dataset_val_patches.json",
        backend_args=None,
        data_prefix=dict(img="/data/patches/500_500_overlap_05_minviz_025/images/"),
        data_root="/data/patches/500_500_overlap_05_minviz_025/",
        metainfo=dict(
            classes=[
                "cup_coral",
                "stylasterids",
                "ophiosabine",
                "astrochlamys",
                "demosponges",
                "asteroidea",
                "glass_sponge",
                "anthomastus",
                "alcyonium",
                "ophiuroid_5_arms",
                "actiniarian",
                "gorgonian",
                "pycnogonid",
                "cucumber",
                "pencil_urchin",
                "worm_tubes",
                "crinoid",
                "bryozoan",
                "benthic_fish",
                "crustaceans",
                "ascidian_pyura_bouvetensis",
                "echinoid",
                "hydroid_solitary",
                "ascidian_cnemidocarpa_verrucosa",
                "ascidian_distaplia",
            ],
            palette=[
                (
                    255,
                    0,
                    0,
                ),
                (
                    255,
                    62,
                    0,
                ),
                (
                    255,
                    125,
                    0,
                ),
                (
                    255,
                    188,
                    0,
                ),
                (
                    251,
                    247,
                    0,
                ),
                (
                    196,
                    255,
                    0,
                ),
                (
                    133,
                    255,
                    0,
                ),
                (
                    70,
                    255,
                    0,
                ),
                (
                    7,
                    255,
                    0,
                ),
                (
                    0,
                    255,
                    54,
                ),
                (
                    0,
                    255,
                    117,
                ),
                (
                    0,
                    255,
                    180,
                ),
                (
                    0,
                    255,
                    243,
                ),
                (
                    0,
                    204,
                    255,
                ),
                (
                    0,
                    141,
                    255,
                ),
                (
                    0,
                    78,
                    255,
                ),
                (
                    0,
                    15,
                    255,
                ),
                (
                    46,
                    0,
                    255,
                ),
                (
                    109,
                    0,
                    255,
                ),
                (
                    172,
                    0,
                    255,
                ),
                (
                    235,
                    0,
                    255,
                ),
                (
                    255,
                    0,
                    212,
                ),
                (
                    255,
                    0,
                    149,
                ),
                (
                    255,
                    0,
                    86,
                ),
                (
                    255,
                    0,
                    23,
                ),
            ],
        ),
        pipeline=[
            dict(type="LoadImageFromFile"),
            dict(type="LoadAnnotations", with_bbox=True),
            dict(
                keep_ratio=True,
                scale=(
                    500,
                    500,
                ),
                type="Resize",
            ),
            dict(
                meta_keys=(
                    "img_id",
                    "img_path",
                    "ori_shape",
                    "img_shape",
                    "scale_factor",
                ),
                type="PackDetInputs",
            ),
        ],
        test_mode=True,
        type="CocoDataset",
    ),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type="DefaultSampler"),
)
val_evaluator = dict(
    ann_file="/data/patches/500_500_overlap_05_minviz_025/annotations/dataset_val_patches.json",
    backend_args=None,
    format_only=False,
    metric="bbox",
    type="CocoMetric",
)
val_pipeline = [
    dict(type="LoadImageFromFile"),
    dict(type="LoadAnnotations", with_bbox=True),
    dict(
        keep_ratio=True,
        scale=(
            500,
            500,
        ),
        type="Resize",
    ),
    dict(
        meta_keys=(
            "img_id",
            "img_path",
            "ori_shape",
            "img_shape",
            "scale_factor",
        ),
        type="PackDetInputs",
    ),
]
vis_backends = [
    dict(type="LocalVisBackend"),
]
visualizer = dict(
    name="visualizer",
    type="DetLocalVisualizer",
    vis_backends=[
        dict(type="LocalVisBackend"),
    ],
)
w = 500
